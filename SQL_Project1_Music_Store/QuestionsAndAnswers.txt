/* SQL PROJECT- MUSIC STORE DATA ANALYSIS */

select * from album;
select * from artist;
select * from customer;
select * from employee;
select * from genre;
select * from invoice;
select * from invoice_line;
select * from media_type;
select * from playlist;
select * from playlist_track;
select * from track;


/* Question Set 1 - Easy */

/*1. Who is the senior most employee based on job title? */

 /* according to hiring date */
select hire_date from employee order by hire_date;
select first_name, last_name from employee where hire_date=(select min(hire_date) from employee);

 /* according to levels */
select * from employee order by levels desc limit 1;



/*2. Which countries have the most Invoices? */

select count(invoice_id) as total_invoice ,billing_country from invoice group by(billing_country)
order by total_invoice desc limit 1 ;

/*3. What are top 3 values of total invoice? */

select * from invoice order by total desc limit 3;



/*4. Which city has the best customers? We would like to throw a promotional Music 
Festival in the city we made the most money. Write a query that returns one city that 
has the highest sum of invoice totals. Return both the city name & sum of all invoice 
totals  */

select sum(total) as city_total,billing_city
from invoice 
group by billing_city order by city_total desc limit 1;



/*5. Who is the best customer? The customer who has spent the most money will be 
declared the best customer. Write a query that returns the person who has spent the 
most money   */

select sum(invoice.total) as customer_total,customer.customer_id,customer.first_name,
customer.last_name
from customer join invoice on customer.customer_id=invoice.customer_id
group by customer.customer_id 
order by customer_total desc limit 1;






/*Question Set 2 – Moderate */

/*1. Write query to return the email, first name, last name, & Genre of all Rock Music 
listeners. Return your list ordered alphabetically by email starting with A */

select * from customer;
select * from genre;
select distinct email,first_name,last_name 
from customer join invoice on customer.customer_id=invoice.customer_id
join invoice_line on invoice.invoice_id=invoice_line.invoice_id
where track_id in(
	select track_id from track
	join genre on track.genre_id=genre.genre_id
	where genre.name='Rock'
) order by email;


/*2. Let's invite the artists who have written the most rock music in our dataset. Write a 
query that returns the Artist name and total track count of the top 10 rock bands */

select * from album;
select * from artist;
select artist.name,count(album.album_id) as total_albums 
from artist 
join album on artist.artist_id=album.artist_id
join track on album.album_id=track.album_id
join genre on track.genre_id=genre.genre_id
where genre.name='Rock'
group by artist.artist_id order by total_albums desc limit 10;



/*3. Return all the track names that have a song length longer than the average song length. 
Return the Name and Milliseconds for each track. Order by the song length with the 
longest songs listed first */

select * from track;
select name,milliseconds 
from track where milliseconds>(select avg(milliseconds) from track)
order by milliseconds desc;





/*Question Set 3 – Advance */

/*1. Find how much amount spent by each customer on artists? Write a query to return
customer name, artist name and total spent */

create table best_selling_artist as (
	select artist.artist_id,artist.name as artist_name, 
	sum(invoice_line.unit_price*invoice_line.quantity) as total_sales
	from invoice_line
	join track on invoice_line.track_id=track.track_id
	join album on track.album_id=album.album_id
	join artist on album.artist_id=artist.artist_id
	group by artist.artist_id
	order by total_sales desc
)

select customer.customer_id,customer.first_name,customer.last_name,bs.artist_name,
sum(invoice_line.unit_price*invoice_line.quantity) as t_sales
from customer
join invoice on customer.customer_id=invoice.customer_id
join invoice_line on invoice.invoice_id=invoice_line.invoice_id
join track on invoice_line.track_id=track.track_id
join album on track.album_id=album.album_id
join best_selling_artist as bs on album.artist_id=bs.artist_id
group by 1,2,3,4
order by t_sales desc
limit 5




/*2. We want to find out the most popular music Genre for each country. We determine the 
most popular genre as the genre with the highest amount of purchases. Write a query 
that returns each country along with the top Genre. For countries where the maximum 
number of purchases is shared return all Genres */

with popular_genre as (
	select count(invoice_line.quantity) as purchases,customer.country,genre.name,genre.genre_id,
	row_number() over(partition by customer.country order by count(invoice_line.quantity) desc) as row_no
	from invoice_line
	join invoice on invoice_line.invoice_id=invoice.invoice_id
	join customer on invoice.customer_id=customer.customer_id
	join track on invoice_line.track_id=track.track_id
	join genre on track.genre_id=genre.genre_id
	group by 2,3,4
	order by country,purchases desc
)
select * from popular_genre where row_no=1;


/*3. Write a query that determines the customer that has spent the most on music for each 
country. Write a query that returns the country along with the top customer and how
much they spent. For countries where the top amount spent is shared, provide all 
customers who spent this amount */

with customer_country as (
	select customer.customer_id,customer.first_name,customer.last_name,invoice.billing_country,
	sum(invoice.total) as total,row_number() over(partition by country order by sum(invoice.total)
	desc) as row_no
	from customer
	join invoice on customer.customer_id=invoice.customer_id
	group by 1,2,3,4
	order by 4,5 desc
)
select * from customer_country where row_no=1;